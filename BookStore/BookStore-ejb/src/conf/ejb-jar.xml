<?xml version="1.0" encoding="UTF-8"?>
<ejb-jar version="2.1" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/ejb-jar_2_1.xsd">
    <display-name>BookStore-ejb</display-name>
    <enterprise-beans>
        <session>
            <display-name>CustomerSB</display-name>
            <ejb-name>Customer</ejb-name>
            <home>sessionBean.CustomerRemoteHome</home>
            <remote>sessionBean.CustomerRemote</remote>
            <ejb-class>sessionBean.Customer</ejb-class>
            <session-type>Stateful</session-type>
            <transaction-type>Container</transaction-type>
            <ejb-local-ref>
                <ejb-ref-name>Users</ejb-ref-name>
                <ejb-ref-type>Entity</ejb-ref-type>
                <local-home>entityBeans.UsersLocalHome</local-home>
                <local>entityBeans.UsersLocal</local>
                <ejb-link>Users</ejb-link>
            </ejb-local-ref>
            <ejb-local-ref>
                <ejb-ref-name>Category</ejb-ref-name>
                <ejb-ref-type>Entity</ejb-ref-type>
                <local-home>entityBeans.CategoryLocalHome</local-home>
                <local>entityBeans.CategoryLocal</local>
                <ejb-link>Category</ejb-link>
            </ejb-local-ref>
            <ejb-local-ref>
                <ejb-ref-name>Book</ejb-ref-name>
                <ejb-ref-type>Entity</ejb-ref-type>
                <local-home>entityBeans.BookLocalHome</local-home>
                <local>entityBeans.BookLocal</local>
                <ejb-link>Book</ejb-link>
            </ejb-local-ref>
            <ejb-local-ref>
                <ejb-ref-name>Comment</ejb-ref-name>
                <ejb-ref-type>Entity</ejb-ref-type>
                <local-home>entityBeans.CommentLocalHome</local-home>
                <local>entityBeans.CommentLocal</local>
                <ejb-link>Comment</ejb-link>
            </ejb-local-ref>
            <ejb-local-ref>
                <ejb-ref-name>Orders</ejb-ref-name>
                <ejb-ref-type>Entity</ejb-ref-type>
                <local-home>entityBeans.OrdersLocalHome</local-home>
                <local>entityBeans.OrdersLocal</local>
                <ejb-link>Orders</ejb-link>
            </ejb-local-ref>
            <ejb-local-ref>
                <ejb-ref-name>OrderLine</ejb-ref-name>
                <ejb-ref-type>Entity</ejb-ref-type>
                <local-home>entityBeans.OrderLineLocalHome</local-home>
                <local>entityBeans.OrderLineLocal</local>
                <ejb-link>OrderLine</ejb-link>
            </ejb-local-ref>
            <resource-ref>
                <description>jdbc:derby://localhost:1527/BookStoreDB</description>
                <res-ref-name>bookstoredb</res-ref-name>
                <res-type>javax.sql.DataSource</res-type>
                <res-auth>Container</res-auth>
                <res-sharing-scope>Shareable</res-sharing-scope>
            </resource-ref>
            </session>
        <entity>
            <description>jdbc:derby://localhost:1527/BookStoreDB [admin on ADMIN]</description>
            <display-name>CategoryEB</display-name>
            <ejb-name>Category</ejb-name>
            <local-home>entityBeans.CategoryLocalHome</local-home>
            <local>entityBeans.CategoryLocal</local>
            <ejb-class>entityBeans.Category</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>java.lang.Integer</prim-key-class>
            <reentrant>false</reentrant>
            <abstract-schema-name>Category</abstract-schema-name>
            <cmp-field>
                <field-name>id</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>name</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>sortorder</field-name>
            </cmp-field>
            <primkey-field>id</primkey-field>
            <query>
                <query-method>
                    <method-name>findById</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(c) FROM Category AS c WHERE c.id = ?1</ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByName</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(c) FROM Category AS c WHERE c.name = ?1</ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findBySortorder</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(c) FROM Category AS c WHERE c.sortorder = ?1</ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findAllCategories</method-name>
                    <method-params/>
                </query-method>
                <ejb-ql>SELECT OBJECT(c) 
FROM Category c</ejb-ql>
            </query>
            </entity>
        <entity>
            <description>jdbc:derby://localhost:1527/BookStoreDB [admin on ADMIN]</description>
            <display-name>OrdersEB</display-name>
            <ejb-name>Orders</ejb-name>
            <local-home>entityBeans.OrdersLocalHome</local-home>
            <local>entityBeans.OrdersLocal</local>
            <ejb-class>entityBeans.Orders</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>java.lang.Integer</prim-key-class>
            <reentrant>false</reentrant>
            <abstract-schema-name>Orders</abstract-schema-name>
            <cmp-field>
                <field-name>id</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>orderDate</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>totalAmount</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>shippingAddress</field-name>
            </cmp-field>
            <primkey-field>id</primkey-field>
            <resource-ref>
                <description>jdbc:derby://localhost:1527/BookStoreDB</description>
                <res-ref-name>bookstoredb</res-ref-name>
                <res-type>javax.sql.DataSource</res-type>
                <res-auth>Container</res-auth>
                <res-sharing-scope>Shareable</res-sharing-scope>
            </resource-ref>
            <query>
                <query-method>
                    <method-name>findById</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(o) FROM Orders AS o WHERE o.id = ?1</ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByTotalAmount</method-name>
                    <method-params>
                        <method-param>double</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(o) FROM Orders AS o WHERE o.totalAmount = ?1</ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByShippingAddress</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(o) FROM Orders AS o WHERE o.shippingAddress = ?1</ejb-ql>
            </query>
            </entity>
        <entity>
            <description>jdbc:derby://localhost:1527/BookStoreDB [admin on ADMIN]</description>
            <display-name>UsersEB</display-name>
            <ejb-name>Users</ejb-name>
            <local-home>entityBeans.UsersLocalHome</local-home>
            <local>entityBeans.UsersLocal</local>
            <ejb-class>entityBeans.Users</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>java.lang.Integer</prim-key-class>
            <reentrant>false</reentrant>
            <abstract-schema-name>Users</abstract-schema-name>
            <cmp-field>
                <field-name>id</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>loginname</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>email</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>password</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>phone</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>fullname</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>birthday</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>createdate</field-name>
            </cmp-field>
            <primkey-field>id</primkey-field>
            <resource-ref>
                <description>jdbc:derby://localhost:1527/BookStoreDB</description>
                <res-ref-name>bookstoredb</res-ref-name>
                <res-type>javax.sql.DataSource</res-type>
                <res-auth>Container</res-auth>
                <res-sharing-scope>Shareable</res-sharing-scope>
            </resource-ref>
            <query>
                <query-method>
                    <method-name>findById</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(u) FROM Users AS u WHERE u.id = ?1</ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByLoginname</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(u) FROM Users AS u WHERE u.loginname = ?1</ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByEmail</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(u) FROM Users AS u WHERE u.email = ?1</ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByPassword</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(u) FROM Users AS u WHERE u.password = ?1</ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByPhone</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(u) FROM Users AS u WHERE u.phone = ?1</ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByFullname</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(u) FROM Users AS u WHERE u.fullname = ?1</ejb-ql>
            </query>
            </entity>
        <entity>
            <description>jdbc:derby://localhost:1527/BookStoreDB [admin on ADMIN]</description>
            <display-name>CommentEB</display-name>
            <ejb-name>Comment</ejb-name>
            <local-home>entityBeans.CommentLocalHome</local-home>
            <local>entityBeans.CommentLocal</local>
            <ejb-class>entityBeans.Comment</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>java.lang.Integer</prim-key-class>
            <reentrant>false</reentrant>
            <abstract-schema-name>Comment</abstract-schema-name>
            <cmp-field>
                <field-name>id</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>rating</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>content</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>commentDate</field-name>
            </cmp-field>
            <primkey-field>id</primkey-field>
            <resource-ref>
                <description>jdbc:derby://localhost:1527/BookStoreDB</description>
                <res-ref-name>bookstoredb</res-ref-name>
                <res-type>javax.sql.DataSource</res-type>
                <res-auth>Container</res-auth>
                <res-sharing-scope>Shareable</res-sharing-scope>
            </resource-ref>
            <query>
                <query-method>
                    <method-name>findById</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(c) FROM Comment AS c WHERE c.id = ?1</ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByRating</method-name>
                    <method-params>
                        <method-param>int</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(c) FROM Comment AS c WHERE c.rating = ?1</ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByContent</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(c) FROM Comment AS c WHERE c.content = ?1</ejb-ql>
            </query>
            </entity>
        <entity>
            <description>jdbc:derby://localhost:1527/BookStoreDB [admin on ADMIN]</description>
            <display-name>BookEB</display-name>
            <ejb-name>Book</ejb-name>
            <local-home>entityBeans.BookLocalHome</local-home>
            <local>entityBeans.BookLocal</local>
            <ejb-class>entityBeans.Book</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>java.lang.Integer</prim-key-class>
            <reentrant>false</reentrant>
            <abstract-schema-name>Book</abstract-schema-name>
            <cmp-field>
                <field-name>id</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>title</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>description</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>author</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>publisher</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>publishdate</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>price</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>photo</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>ratingcount</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>ratingvalue</field-name>
            </cmp-field>
            <primkey-field>id</primkey-field>
            <query>
                <query-method>
                    <method-name>findById</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(b) FROM Book AS b WHERE b.id = ?1</ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByTitle</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(b) FROM Book AS b WHERE b.title LIKE ?1</ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByDescription</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(b) FROM Book AS b WHERE b.description = ?1</ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByAuthor</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(b) FROM Book AS b WHERE b.author LIKE ?1</ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByPublisher</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(b) FROM Book AS b WHERE b.publisher = ?1</ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByPrice</method-name>
                    <method-params>
                        <method-param>double</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(b) FROM Book AS b WHERE b.price = ?1</ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByPhoto</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(b) FROM Book AS b WHERE b.photo = ?1</ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByRatingcount</method-name>
                    <method-params>
                        <method-param>int</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(b) FROM Book AS b WHERE b.ratingcount = ?1</ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByRatingvalue</method-name>
                    <method-params>
                        <method-param>int</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(b) FROM Book AS b WHERE b.ratingvalue = ?1</ejb-ql>
            </query>
            </entity>
        <entity>
            <description>jdbc:derby://localhost:1527/BookStoreDB [admin on ADMIN]</description>
            <display-name>OrderLineEB</display-name>
            <ejb-name>OrderLine</ejb-name>
            <local-home>entityBeans.OrderLineLocalHome</local-home>
            <local>entityBeans.OrderLineLocal</local>
            <ejb-class>entityBeans.OrderLine</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>java.lang.Integer</prim-key-class>
            <reentrant>false</reentrant>
            <abstract-schema-name>OrderLine</abstract-schema-name>
            <cmp-field>
                <field-name>id</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>price</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>quantity</field-name>
            </cmp-field>
            <primkey-field>id</primkey-field>
            <resource-ref>
                <description>jdbc:derby://localhost:1527/BookStoreDB</description>
                <res-ref-name>bookstoredb</res-ref-name>
                <res-type>javax.sql.DataSource</res-type>
                <res-auth>Container</res-auth>
                <res-sharing-scope>Shareable</res-sharing-scope>
            </resource-ref>
            <query>
                <query-method>
                    <method-name>findById</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(o) FROM OrderLine AS o WHERE o.id = ?1</ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByPrice</method-name>
                    <method-params>
                        <method-param>double</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(o) FROM OrderLine AS o WHERE o.price = ?1</ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByQuantity</method-name>
                    <method-params>
                        <method-param>int</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>SELECT OBJECT(o) FROM OrderLine AS o WHERE o.quantity = ?1</ejb-ql>
            </query>
            </entity>
        </enterprise-beans>
    <relationships>
        <ejb-relation>
            <ejb-relation-name>Orders-Users</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Orders</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <relationship-role-source>
                    <ejb-name>Orders</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>users</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Users</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>Users</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>ordersCollection</cmr-field-name>
                    <cmr-field-type>java.util.Collection</cmr-field-type>
                </cmr-field>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>Comment-Users</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Comment</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <relationship-role-source>
                    <ejb-name>Comment</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>users</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Users</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <cascade-delete/>
                <relationship-role-source>
                    <ejb-name>Users</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>commentCollection</cmr-field-name>
                    <cmr-field-type>java.util.Collection</cmr-field-type>
                </cmr-field>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>Comment-Book</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Comment</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <relationship-role-source>
                    <ejb-name>Comment</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>book</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Book</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <cascade-delete/>
                <relationship-role-source>
                    <ejb-name>Book</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>commentCollection</cmr-field-name>
                    <cmr-field-type>java.util.Collection</cmr-field-type>
                </cmr-field>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>Book-Category</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Book</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <relationship-role-source>
                    <ejb-name>Book</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>category</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Category</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <cascade-delete/>
                <relationship-role-source>
                    <ejb-name>Category</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>bookCollection</cmr-field-name>
                    <cmr-field-type>java.util.Collection</cmr-field-type>
                </cmr-field>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>OrderLine-Orders</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>OrderLine</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <relationship-role-source>
                    <ejb-name>OrderLine</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>orders</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Orders</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <cascade-delete/>
                <relationship-role-source>
                    <ejb-name>Orders</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>orderLineCollection</cmr-field-name>
                    <cmr-field-type>java.util.Collection</cmr-field-type>
                </cmr-field>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>OrderLine-Book</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>OrderLine</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <relationship-role-source>
                    <ejb-name>OrderLine</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>book</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Book</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <cascade-delete/>
                <relationship-role-source>
                    <ejb-name>Book</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>orderLineCollection</cmr-field-name>
                    <cmr-field-type>java.util.Collection</cmr-field-type>
                </cmr-field>
            </ejb-relationship-role>
        </ejb-relation>
        </relationships>
    <assembly-descriptor>
        <container-transaction>
            <method>
                <ejb-name>Category</ejb-name>
                <method-name>*</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
        </container-transaction>
        <container-transaction>
            <method>
                <ejb-name>Orders</ejb-name>
                <method-name>*</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
        </container-transaction>
        <container-transaction>
            <method>
                <ejb-name>Users</ejb-name>
                <method-name>*</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
        </container-transaction>
        <container-transaction>
            <method>
                <ejb-name>Comment</ejb-name>
                <method-name>*</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
        </container-transaction>
        <container-transaction>
            <method>
                <ejb-name>Book</ejb-name>
                <method-name>*</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
        </container-transaction>
        <container-transaction>
            <method>
                <ejb-name>OrderLine</ejb-name>
                <method-name>*</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
        </container-transaction>
        <container-transaction>
            <method>
                <ejb-name>Customer</ejb-name>
                <method-name>*</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
        </container-transaction>
        </assembly-descriptor>
    </ejb-jar>
